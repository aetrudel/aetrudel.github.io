---
---

@string{aps = {American Physical Society,}}

@article{Rowbottom_miracles,
  	abbr={Synthese},
	title = {Does the no-miracles argument appy to AI?},
	volume = {},
	copyright = {All rights reserved},
	issn = {},
	url = {},
	html = {},
	preprint={},
	doi = {},
	abstract = {According to the standard no miracles argument, science’s predictive success is best explained by the approximate truth of its theories. In contemporary science, however, machine learning systems, such as AlphaFold2, are also remarkably predictively successful. We might therefore ask what best explains such successes. Might these AIs accurately represent critical aspects of their targets in the world? And if so, does a variant of the no miracles argument apply to these AIs? We argue for an affirmative answer to these questions. We conclude that if the standard no miracles argument is sound, an AI-specific no miracles argument is also sound.},
	number = {},
	journal = {Synthese},
	author ={Rowbottom, Darrell and Curtis-Trudel, André and Peden, William},
	year = {},
	pages = {},
}

@article{curtis-trudel_why_2022,
  	abbr={BJPS},
  	selected={true},
	title = {Why do we need a theory of implementation?},
	copyright = {All rights reserved},
	html = {https://www.journals.uchicago.edu/doi/10.1086/714791},
	preprint ={http://philsci-archive.pitt.edu/17079/},
	doi = {10.1086/714791},
	abstract = {The received view of computation is methodologically bifurcated: it offers different accounts of computation in the mathematical and physical cases. But little in the way of argument has been given for this approach. This paper rectifies the situation by arguing that the alternative, a unified account, is untenable. Furthermore, once these issues are brought into sharper relief we can see that work remains to be done to illuminate the relationship between physical and mathematical computation.},
	journal = {The British Journal for the Philosophy of Science},
	author = {Curtis-Trudel, André},
	year = {2022},
	volume = {73},
	number = {4},
}

@article{curtis-trudel_implementation_2021,
  	abbr={PSA},
  	selected={false},
	title = {Implementation as {Resemblance}},
	volume = {88},
	copyright = {All rights reserved},
	issn = {0031-8248, 1539-767X},
	url = {https://www.journals.uchicago.edu/doi/10.1086/714872},
	html = 	{https://www.journals.uchicago.edu/doi/10.1086/714872},
	preprint={http://philsci-archive.pitt.edu/id/eprint/18040},
	doi = {10.1086/714872},
	abstract = {This article advertises a new account of computational implementation. According to the resemblance account, implementation is a matter of resembling a computational architecture. The resemblance account departs from previous theories by denying that computational architectures are exhausted by their formal, mathematical features. Instead, they are taken to be permeated with causality, spatiotemporality, and other nonmathematical features. I argue that this approach comports well with computer scientific practice and offers a novel response to so-called triviality arguments.},
	language = {en},
	number = {5},
	urldate = {2021-12-03},
	journal = {Philosophy of Science},
	author = {Curtis-Trudel, André},
	year = {2021},
	pages = {1021--1032},
	file = {Curtis-Trudel - 2021 - Implementation as Resemblance.pdf:/home/andre-work/Zotero/storage/I5J38F33/Curtis-Trudel - 2021 - Implementation as Resemblance.pdf:application/pdf},
}

@article{curtis-trudel_determinacy_2022,
  	abbr={Synthese},
	title = {The determinacy of computation},
	volume = {200},
	copyright = {All rights reserved},
	issn = {1573-0964},
	url = {https://doi.org/10.1007/s11229-022-03568-3},
	html = {https://doi.org/10.1007/s11229-022-03568-3},
	preprint={http://philsci-archive.pitt.edu/20057/},
	doi = {10.1007/s11229-022-03568-3},
	abstract = {A skeptical worry known as ‘the indeterminacy of computation’ animates much recent philosophical reflection on the computational identity of physical systems. On the one hand, computational explanation seems to require that physical computing systems fall under a single, unique computational description at a time. On the other, if a physical system falls under any computational description, it seems to fall under many simultaneously. Absent some principled reason to take just one of these descriptions in particular as relevant for computational explanation, widespread failure of computational explanation would appear to follow. This paper advances a new solution to the indeterminacy of computation. Very roughly, I argue that the computational identity of a physical system is determinate relative to a contextually specified way of regarding that system computationally—known as a labelling scheme. When a system simultaneously implements multiple computations, it does so relative to different labelling schemes. But relative to a fixed labelling scheme, a physical system has a unique computational identity. I argue that this relativistic conception of computational identity vindicates computational explanation in the face of simultaneous implementation.},
	number = {1},
	journal = {Synthese},
	author = {Curtis-Trudel, André},
	year = {2022},
	pages = {1--28},
	file = {Curtis-Trudel - 2022 - The determinacy of computation.pdf:/home/andre-work/Zotero/storage/KQ9UJXP9/Curtis-Trudel - 2022 - The determinacy of computation.pdf:application/pdf},
}

@article{curtis-trudel_mathematical_nodate,
  	abbr={PSA},
  	selected={true},
	title = {Mathematical explanation in computer science},
	copyright = {All rights reserved},
	preprint = {http://philsci-archive.pitt.edu/id/eprint/20976},
	html = {https://doi.org/10.1017/psa.2023.26},
	abstract = {This note scouts a broad class of explanations of central importance to contemporary computer science. These explanations, which I call limitative explanations, explain why certain problems cannot be solved computationally. Limitative explanations are philosophically rich, but have not received the attention they deserve. The primary goals of this note are to isolate limitative explanations and provide a preliminary account of what makes them explanatory. On the account I favour, limitative explanations are best understood as non-causal mathematical explanations which depend on highly idealized models of computation.},
	journal = {Philosophy of Science},
	author = {Curtis-Trudel, André},
	year = {2023},
}
@article{curtis-trudel_primiero_nodate,
  	abbr={GP},
  	selected={true},
	volume = {33},
	number = {2},
	title = {Primiero on Physical Computation},
	copyright = {All rights reserved},
	preprint = {},
	journal = {Global Philosophy},
	author = {Curtis-Trudel, André},
	year = {2023},
	html = {https://link.springer.com/article/10.1007/s10516-023-09661-7},
	abstract = {This note discusses the account of physical computation offered in Part II of Primiero’s On the Foundations of Computing. Although there is much to find attractive about the account, I argue that the account is obscure at certain crucial junctures and that it does not supply a wholly satisfactory account of miscomputation. I close by considering whether the engineering foundation of computing requires a theory of physical computation in the first place, suggesting tentatively that it does not.},
}

@article{rowbottom_evidence_nodate,
	abbr={AsJP},
	selected={true},
	year={2023},
	journal={Asian Journal of Philosophy},
	title={Evidence, Computation, and AI},
	author ={Rowbottom, Darrell and Curtis-Trudel, André and Peden, William},
	abstract = {Can scientific evidence outstretch what scientists have mentally entertained, or could ever entertain? This article focuses on the plausibility and consequences of an affirmative answer in a special case. Specifically, it discusses how we may treat automated scientific data-gathering systems—especially AI systems used to make predictions or to generate novel theories—from the point of view of confirmation theory. It uses AlphaFold2 as a case study.},
	preprint = {https://drive.google.com/file/d/1TGCeS1q3hH8C__JLRqq4Gg0ASxF8T8zh/view},
	doi = {10.1007/s44204-023-00061-7},
	volume = {2},
	issue = {11},
	html = {https://doi.org/10.1007/s44204-023-00061-7},
}

@article{curtis-trudel_limitative_2023,
	abbr={PS},
	selected={true},
	year={2023},
	journal={Philosophical Studies},
	title={Limitative Computational Explanations},
	author={Curtis-Trudel, André},
	doi={10.1007/s11098-023-02039-w},
	html={https://link.springer.com/article/10.1007/s11098-023-02039-w},
	abstract={What is computational explanation? Many accounts treat it as a kind of causal explanation. I argue against two more specific versions of this view, corresponding to two popular treatments of causal explanation. The first holds that computational explanation is mechanistic, while the second holds that it is interventionist. However, both overlook an important class of computational explanations, which I call limitative explanations. Limitative explanations explain why certain problems cannot be solved computationally, either in principle or in practice. I argue that limitative explanations are not plausibly understood in either mechanistic or interventionist terms. One upshot of this argument is that there are causal and non-causal kinds of computational explanation. I close the paper by suggesting that both are grounded in the notion of computational implementation.},
}
